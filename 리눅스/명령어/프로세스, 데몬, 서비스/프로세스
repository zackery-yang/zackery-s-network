하드디스크에 저장된 실행코드가 메모리에 로딩되어 활성화된 것



포그라운드프로세스 Foreground Process

Firefox 등과 같이 실행하면 화면에 나타나서 사용자와 상호작용을 하는 프로세스를 말함
화면에 실행되는 것이 프로세스 라고 생각하면 된다


백그라운드프로세스 Background Process
실행은 되었지만 화면에는 나타나지않고 뒤에서 실행되는 프로세스
바이러스백신, 서버데몬 등은 눈에는 보이지 않지만 실행되는 것


프로세스 번호
메모리에 로딩되어 활성화된 프로세스를 구분하려면 각각의 고유 번호가 필요
각각의 프로세스에 할당된 고유 번호를 프로세스 번호라 부름
필요한 이유는 메모리에서 활성화된 프로세스를 메모리에서 강제로 제거하려면 포로세스 번호를 사용해야 하기 때문



작업번호
현재 실행되는 백그라운드 프로세스의 순차 번호를 의미



부모 프로세스와 자식 프로세스

모든 프로세스는 혼자서 독립적으로 실행되는 것이 아니라 부모 프로세스의 하위에 종속되어 실행
ex) firefox 같은 경우 X윈도 프로세스가 구동된 상태에서 실행되어야 함
따라서 X윈도우가 firefox의 부모 프로세스가 됨




ps
현재 프로세스의 상태를 확인하는 명령어
많은 옵션과 함계 사용될 수 잇음

프로세스의 번호 및 상태를 확인 할 때
ps -ef | grep 프로세스이름    명령어 사용


kill
프로세스를 강제로 종료하는 명령어
k -9 옵션과 함께 사용하ㅕㅁㄴ 무조건 프로세스가 종료됨


pstree
부모 프로세스와 자식 프로세스의 관계를 트리형태로 보여줌

